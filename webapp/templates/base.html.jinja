<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>CobbleGen Configurator{% block title %}{% endblock %}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="/static/css/bootstrap.min.css" rel="stylesheet">
  <link href="/static/css/style.css" rel="stylesheet">
  <style>
    /* Custom styling for a gorgeous look */
    body {
      background-color: #f8f9fa;
      padding-top: 70px;
    }
    .card {
      transition: transform 0.2s, box-shadow 0.2s;
    }
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-white fixed-top shadow-sm">
    <div class="container">
      <a class="navbar-brand" href="{{ url_for('home') }}">CobbleGen Configurator</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="{{ url_for('home') }}">Home</a>
          </li>
          <!-- Add more nav links as needed -->
        </ul>
      </div>
    </div>
  </nav>
  
  <div class="container my-4">
    {% block content %}{% endblock %}
  </div>
  
  <script src="/static/js/bootstrap.min.js"></script>
  <script src="/static/js/htmx.min.js"></script>
  <script src="/static/js/hjson.js"></script>
  <script src="/static/js/scopeQuerySelectorShim.min.js"></script>
  <script>
    function getGenerators(entityType) {
      let gens = {
      };

      for (var key in localStorage) {
        if (!localStorage.hasOwnProperty(key)) continue;
        if (!key.startsWith("ref-gen:")) continue;
        if (entityType != null || entityType != undefined) {
          if (!key.startsWith(`ref-gen:${entityType}:`)) continue;
        }

        let regex = /ref-gen:(.+):(.+)/;

        try {
          let json = JSON.parse(localStorage[key]);
          if (entityType != null || entityType != undefined) json.name = key.replace(regex, "$2");
          let type = key.replace(regex, "$1");
          if (gens[type] === undefined) {
            gens[type] = [];
          }
          gens[type].push(json);
        } catch { continue; }
      }
      if (entityType != null || entityType != undefined) return JSON.stringify(gens[entityType] || []);
      return JSON.stringify(gens);
    }
  </script>
  {% block body_after %}{% endblock %}
</body>
</html>